/*
 * Created on Wed Feb 10 2021
 *
 * The Unlicense
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or distribute
 * this software, either in source code form or as a compiled binary, for any
 * purpose, commercial or non-commercial, and by any means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors of this
 * software dedicate any and all copyright interest in the software to the public
 * domain. We make this dedication for the benefit of the public at large and to
 * the detriment of our heirs and successors. We intend this dedication to be an
 * overt act of relinquishment in perpetuity of all present and future rights to
 * this software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information, please refer to <https://unlicense.org>
 */


plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.0'
}
group = 'Seng302-team-900'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // use hibernate to persist (java) domain entities for us, aka JPA implementation
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.29.Final'

    // use sqlite
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'
    compile group: 'com.zsoltfabok', name: 'sqlite-dialect', version: '1.0'

    // use a in-memory database to store entities (can be substituted with any database)
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'

    // Cucumber dependencies
    testImplementation 'io.cucumber:cucumber-java:6.9.1'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

// specify a dedicated task for Cucumber
task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}
// configure test task to run on JUnit 5
test {
    description = "Runs JUnit 5/Jupiter tests (unit tests)"
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// Jacoco test coverage configuration
jacoco {
    toolVersion = "0.8.6"
}

// select what reports Jacoco generates and where to put them
jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/jacoco/test-report.xml")
        csv.enabled false
        html.destination file("${buildDir}/jacoco/html")
    }
}

// Sonarqube specific configuration (uncomment when you will use Sonarqube static code analysis)
sonarqube {
    properties {
        property "sonar.projectKey", "team-900-server"
        property "sonar.projectName", "team 900 - server"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://csse-s302g9.canterbury.ac.nz/sonarqube/"
        property "sonar.login", "d4e9b98916e388ef5dee9b215b83962045deffd2"
    }
}
